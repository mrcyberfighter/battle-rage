# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = battle-rage$(EXEEXT)
subdir = source
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_battle_rage_OBJECTS = ./battle_rage-global_vars.$(OBJEXT) \
	./battle_rage-global_fighters.$(OBJEXT) \
	./Files/battle_rage-draw_rect.$(OBJEXT) \
	./Files/battle_rage-images_utils.$(OBJEXT) \
	./Files/battle_rage-ttf_utils.$(OBJEXT) \
	./Files/battle_rage-SDL2_utils.$(OBJEXT) \
	./Fighters/battle_rage-Fighters.$(OBJEXT) \
	./Fighters/battle_rage-Fuuma.$(OBJEXT) \
	./Fighters/battle_rage-Geese_Howard.$(OBJEXT) \
	./Fighters/battle_rage-Hanzo.$(OBJEXT) \
	./Fighters/battle_rage-Hotaru_Futaba.$(OBJEXT) \
	./Fighters/battle_rage-Iori_Yagami.$(OBJEXT) \
	./Fighters/battle_rage-K.$(OBJEXT) \
	./Fighters/battle_rage-Kim_Kaphwan.$(OBJEXT) \
	./Fighters/battle_rage-Kisarah_Westfield.$(OBJEXT) \
	./Fighters/battle_rage-Kyo_Kusanagi.$(OBJEXT) \
	./Fighters/battle_rage-Lee_Pai_Long.$(OBJEXT) \
	./Fighters/battle_rage-Mai_Shiranui.$(OBJEXT) \
	./Fighters/battle_rage-Mr_Big.$(OBJEXT) \
	./Fighters/battle_rage-Mr_Karate.$(OBJEXT) \
	./Fighters/battle_rage-Robert_Garcia.$(OBJEXT) \
	./Fighters/battle_rage-Rock_Howard.$(OBJEXT) \
	./Fighters/battle_rage-Terry_Bogard.$(OBJEXT) \
	./battle_rage-Input_Handler.$(OBJEXT) \
	./battle_rage-joystick.$(OBJEXT) \
	./battle_rage-helper_functions.$(OBJEXT) \
	./battle_rage-main.$(OBJEXT) \
	./battle_rage-joystick_configuration.$(OBJEXT) \
	./battle_rage-choose_fighters.$(OBJEXT) \
	./battle_rage-fighting_mainloop.$(OBJEXT) \
	./battle_rage-presentation_screen.$(OBJEXT) \
	./battle_rage-main_menu.$(OBJEXT) \
	./battle_rage-configure_game_menu.$(OBJEXT) \
	./battle_rage-round_interlude.$(OBJEXT)
battle_rage_OBJECTS = $(am_battle_rage_OBJECTS)
am__DEPENDENCIES_1 =
battle_rage_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
battle_rage_LINK = $(CXXLD) $(battle_rage_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(battle_rage_SOURCES)
DIST_SOURCES = $(battle_rage_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASENAME = @BASENAME@
CHMOD = @CHMOD@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DESKTOP_FILE_INSTALL = @DESKTOP_FILE_INSTALL@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MV = @MV@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RM = @RM@
SDL2_CFLAGS = @SDL2_CFLAGS@
SDL2_IMAGE_CFLAGS = @SDL2_IMAGE_CFLAGS@
SDL2_IMAGE_LIBS = @SDL2_IMAGE_LIBS@
SDL2_LIBS = @SDL2_LIBS@
SDL2_MIXER_CFLAGS = @SDL2_MIXER_CFLAGS@
SDL2_MIXER_LIBS = @SDL2_MIXER_LIBS@
SDL2_TTF_CFLAGS = @SDL2_TTF_CFLAGS@
SDL2_TTF_LIBS = @SDL2_TTF_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UNZIP = @UNZIP@
UPDATE_DESKTOP_DATABASE = @UPDATE_DESKTOP_DATABASE@
VERSION = @VERSION@
XDG_DESKTOP_MENU = @XDG_DESKTOP_MENU@
XDG_OPEN = @XDG_OPEN@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
battle_rage_SOURCES = ./global_vars.cpp \
                        ./global_fighters.cpp \
                        ./Files/draw_rect.cpp \
                        ./Files/images_utils.cpp \
                        ./Files/ttf_utils.cpp \
                        ./Files/SDL2_utils.cpp \
                        ./Fighters/Fighters.cpp \
                        ./Fighters/Fuuma.cpp \
                        ./Fighters/Geese_Howard.cpp \
                        ./Fighters/Hanzo.cpp \
                        ./Fighters/Hotaru_Futaba.cpp \
                        ./Fighters/Iori_Yagami.cpp \
                        ./Fighters/K.cpp \
                        ./Fighters/Kim_Kaphwan.cpp \
                        ./Fighters/Kisarah_Westfield.cpp \
                        ./Fighters/Kyo_Kusanagi.cpp \
                        ./Fighters/Lee_Pai_Long.cpp \
                        ./Fighters/Mai_Shiranui.cpp \
                        ./Fighters/Mr_Big.cpp \
                        ./Fighters/Mr_Karate.cpp \
                        ./Fighters/Robert_Garcia.cpp \
                        ./Fighters/Rock_Howard.cpp \
                        ./Fighters/Terry_Bogard.cpp \
                        ./Input_Handler.cpp \
                        ./joystick.cpp \
                        ./helper_functions.cpp \
                        ./main.cpp \
                        ./joystick_configuration.cpp \
                        ./choose_fighters.cpp \
                        ./fighting_mainloop.cpp \
                        ./presentation_screen.cpp \
                        ./main_menu.cpp \
                        ./configure_game_menu.cpp \
                        ./round_interlude.cpp

EXTRA_DIST = *.h \
              ./Files/*.h    \
              ./Fighters/*.h \
              ./headers/*.h

battle_rage_CPPFLAGS = -DPREFIX=\"$(DESTDIR)$(prefix)\"
OPTIMISATION = -finline-functions -fno-signed-zeros       
battle_rage_CXXFLAGS = $(OPTIMISATION) ${SDL2_CFLAGS} ${SDL2_IMAGE_CFLAGS} ${SDL2_TTF_CFLAGS} ${SDL2_MIXER_CFLAGS}
battle_rage_LDADD = ${SDL2_LIBS} ${SDL2_IMAGE_LIBS} ${SDL2_TTF_LIBS} ${SDL2_MIXER_LIBS} ${LIBS}      
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign source/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign source/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
./$(am__dirstamp):
	@$(MKDIR_P) .
	@: > ./$(am__dirstamp)
$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./$(DEPDIR)
	@: > $(DEPDIR)/$(am__dirstamp)
./battle_rage-global_vars.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-global_fighters.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
Files/$(am__dirstamp):
	@$(MKDIR_P) ./Files
	@: > Files/$(am__dirstamp)
Files/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Files/$(DEPDIR)
	@: > Files/$(DEPDIR)/$(am__dirstamp)
./Files/battle_rage-draw_rect.$(OBJEXT): Files/$(am__dirstamp) \
	Files/$(DEPDIR)/$(am__dirstamp)
./Files/battle_rage-images_utils.$(OBJEXT): Files/$(am__dirstamp) \
	Files/$(DEPDIR)/$(am__dirstamp)
./Files/battle_rage-ttf_utils.$(OBJEXT): Files/$(am__dirstamp) \
	Files/$(DEPDIR)/$(am__dirstamp)
./Files/battle_rage-SDL2_utils.$(OBJEXT): Files/$(am__dirstamp) \
	Files/$(DEPDIR)/$(am__dirstamp)
Fighters/$(am__dirstamp):
	@$(MKDIR_P) ./Fighters
	@: > Fighters/$(am__dirstamp)
Fighters/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./Fighters/$(DEPDIR)
	@: > Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Fighters.$(OBJEXT): Fighters/$(am__dirstamp) \
	Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Fuuma.$(OBJEXT): Fighters/$(am__dirstamp) \
	Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Geese_Howard.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Hanzo.$(OBJEXT): Fighters/$(am__dirstamp) \
	Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Hotaru_Futaba.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Iori_Yagami.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-K.$(OBJEXT): Fighters/$(am__dirstamp) \
	Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Kim_Kaphwan.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Kisarah_Westfield.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Kyo_Kusanagi.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Lee_Pai_Long.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Mai_Shiranui.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Mr_Big.$(OBJEXT): Fighters/$(am__dirstamp) \
	Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Mr_Karate.$(OBJEXT): Fighters/$(am__dirstamp) \
	Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Robert_Garcia.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Rock_Howard.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./Fighters/battle_rage-Terry_Bogard.$(OBJEXT):  \
	Fighters/$(am__dirstamp) Fighters/$(DEPDIR)/$(am__dirstamp)
./battle_rage-Input_Handler.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-joystick.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-helper_functions.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-main.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-joystick_configuration.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-choose_fighters.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-fighting_mainloop.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-presentation_screen.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-main_menu.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-configure_game_menu.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)
./battle_rage-round_interlude.$(OBJEXT): ./$(am__dirstamp) \
	$(DEPDIR)/$(am__dirstamp)

battle-rage$(EXEEXT): $(battle_rage_OBJECTS) $(battle_rage_DEPENDENCIES) $(EXTRA_battle_rage_DEPENDENCIES) 
	@rm -f battle-rage$(EXEEXT)
	$(AM_V_CXXLD)$(battle_rage_LINK) $(battle_rage_OBJECTS) $(battle_rage_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ./*.$(OBJEXT)
	-rm -f ./Fighters/*.$(OBJEXT)
	-rm -f ./Files/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-Input_Handler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-choose_fighters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-configure_game_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-fighting_mainloop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-global_fighters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-global_vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-helper_functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-joystick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-joystick_configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-main_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-presentation_screen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battle_rage-round_interlude.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Fighters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Fuuma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Hanzo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-K.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Files/$(DEPDIR)/battle_rage-SDL2_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Files/$(DEPDIR)/battle_rage-draw_rect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Files/$(DEPDIR)/battle_rage-images_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./Files/$(DEPDIR)/battle_rage-ttf_utils.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

./battle_rage-global_vars.o: ./global_vars.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-global_vars.o -MD -MP -MF $(DEPDIR)/battle_rage-global_vars.Tpo -c -o ./battle_rage-global_vars.o `test -f './global_vars.cpp' || echo '$(srcdir)/'`./global_vars.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-global_vars.Tpo $(DEPDIR)/battle_rage-global_vars.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./global_vars.cpp' object='./battle_rage-global_vars.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-global_vars.o `test -f './global_vars.cpp' || echo '$(srcdir)/'`./global_vars.cpp

./battle_rage-global_vars.obj: ./global_vars.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-global_vars.obj -MD -MP -MF $(DEPDIR)/battle_rage-global_vars.Tpo -c -o ./battle_rage-global_vars.obj `if test -f './global_vars.cpp'; then $(CYGPATH_W) './global_vars.cpp'; else $(CYGPATH_W) '$(srcdir)/./global_vars.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-global_vars.Tpo $(DEPDIR)/battle_rage-global_vars.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./global_vars.cpp' object='./battle_rage-global_vars.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-global_vars.obj `if test -f './global_vars.cpp'; then $(CYGPATH_W) './global_vars.cpp'; else $(CYGPATH_W) '$(srcdir)/./global_vars.cpp'; fi`

./battle_rage-global_fighters.o: ./global_fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-global_fighters.o -MD -MP -MF $(DEPDIR)/battle_rage-global_fighters.Tpo -c -o ./battle_rage-global_fighters.o `test -f './global_fighters.cpp' || echo '$(srcdir)/'`./global_fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-global_fighters.Tpo $(DEPDIR)/battle_rage-global_fighters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./global_fighters.cpp' object='./battle_rage-global_fighters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-global_fighters.o `test -f './global_fighters.cpp' || echo '$(srcdir)/'`./global_fighters.cpp

./battle_rage-global_fighters.obj: ./global_fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-global_fighters.obj -MD -MP -MF $(DEPDIR)/battle_rage-global_fighters.Tpo -c -o ./battle_rage-global_fighters.obj `if test -f './global_fighters.cpp'; then $(CYGPATH_W) './global_fighters.cpp'; else $(CYGPATH_W) '$(srcdir)/./global_fighters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-global_fighters.Tpo $(DEPDIR)/battle_rage-global_fighters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./global_fighters.cpp' object='./battle_rage-global_fighters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-global_fighters.obj `if test -f './global_fighters.cpp'; then $(CYGPATH_W) './global_fighters.cpp'; else $(CYGPATH_W) '$(srcdir)/./global_fighters.cpp'; fi`

./Files/battle_rage-draw_rect.o: ./Files/draw_rect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-draw_rect.o -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-draw_rect.Tpo -c -o ./Files/battle_rage-draw_rect.o `test -f './Files/draw_rect.cpp' || echo '$(srcdir)/'`./Files/draw_rect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-draw_rect.Tpo ./Files/$(DEPDIR)/battle_rage-draw_rect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/draw_rect.cpp' object='./Files/battle_rage-draw_rect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-draw_rect.o `test -f './Files/draw_rect.cpp' || echo '$(srcdir)/'`./Files/draw_rect.cpp

./Files/battle_rage-draw_rect.obj: ./Files/draw_rect.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-draw_rect.obj -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-draw_rect.Tpo -c -o ./Files/battle_rage-draw_rect.obj `if test -f './Files/draw_rect.cpp'; then $(CYGPATH_W) './Files/draw_rect.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/draw_rect.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-draw_rect.Tpo ./Files/$(DEPDIR)/battle_rage-draw_rect.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/draw_rect.cpp' object='./Files/battle_rage-draw_rect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-draw_rect.obj `if test -f './Files/draw_rect.cpp'; then $(CYGPATH_W) './Files/draw_rect.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/draw_rect.cpp'; fi`

./Files/battle_rage-images_utils.o: ./Files/images_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-images_utils.o -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-images_utils.Tpo -c -o ./Files/battle_rage-images_utils.o `test -f './Files/images_utils.cpp' || echo '$(srcdir)/'`./Files/images_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-images_utils.Tpo ./Files/$(DEPDIR)/battle_rage-images_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/images_utils.cpp' object='./Files/battle_rage-images_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-images_utils.o `test -f './Files/images_utils.cpp' || echo '$(srcdir)/'`./Files/images_utils.cpp

./Files/battle_rage-images_utils.obj: ./Files/images_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-images_utils.obj -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-images_utils.Tpo -c -o ./Files/battle_rage-images_utils.obj `if test -f './Files/images_utils.cpp'; then $(CYGPATH_W) './Files/images_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/images_utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-images_utils.Tpo ./Files/$(DEPDIR)/battle_rage-images_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/images_utils.cpp' object='./Files/battle_rage-images_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-images_utils.obj `if test -f './Files/images_utils.cpp'; then $(CYGPATH_W) './Files/images_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/images_utils.cpp'; fi`

./Files/battle_rage-ttf_utils.o: ./Files/ttf_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-ttf_utils.o -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-ttf_utils.Tpo -c -o ./Files/battle_rage-ttf_utils.o `test -f './Files/ttf_utils.cpp' || echo '$(srcdir)/'`./Files/ttf_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-ttf_utils.Tpo ./Files/$(DEPDIR)/battle_rage-ttf_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/ttf_utils.cpp' object='./Files/battle_rage-ttf_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-ttf_utils.o `test -f './Files/ttf_utils.cpp' || echo '$(srcdir)/'`./Files/ttf_utils.cpp

./Files/battle_rage-ttf_utils.obj: ./Files/ttf_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-ttf_utils.obj -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-ttf_utils.Tpo -c -o ./Files/battle_rage-ttf_utils.obj `if test -f './Files/ttf_utils.cpp'; then $(CYGPATH_W) './Files/ttf_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/ttf_utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-ttf_utils.Tpo ./Files/$(DEPDIR)/battle_rage-ttf_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/ttf_utils.cpp' object='./Files/battle_rage-ttf_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-ttf_utils.obj `if test -f './Files/ttf_utils.cpp'; then $(CYGPATH_W) './Files/ttf_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/ttf_utils.cpp'; fi`

./Files/battle_rage-SDL2_utils.o: ./Files/SDL2_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-SDL2_utils.o -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-SDL2_utils.Tpo -c -o ./Files/battle_rage-SDL2_utils.o `test -f './Files/SDL2_utils.cpp' || echo '$(srcdir)/'`./Files/SDL2_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-SDL2_utils.Tpo ./Files/$(DEPDIR)/battle_rage-SDL2_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/SDL2_utils.cpp' object='./Files/battle_rage-SDL2_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-SDL2_utils.o `test -f './Files/SDL2_utils.cpp' || echo '$(srcdir)/'`./Files/SDL2_utils.cpp

./Files/battle_rage-SDL2_utils.obj: ./Files/SDL2_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Files/battle_rage-SDL2_utils.obj -MD -MP -MF ./Files/$(DEPDIR)/battle_rage-SDL2_utils.Tpo -c -o ./Files/battle_rage-SDL2_utils.obj `if test -f './Files/SDL2_utils.cpp'; then $(CYGPATH_W) './Files/SDL2_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/SDL2_utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Files/$(DEPDIR)/battle_rage-SDL2_utils.Tpo ./Files/$(DEPDIR)/battle_rage-SDL2_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Files/SDL2_utils.cpp' object='./Files/battle_rage-SDL2_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Files/battle_rage-SDL2_utils.obj `if test -f './Files/SDL2_utils.cpp'; then $(CYGPATH_W) './Files/SDL2_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/./Files/SDL2_utils.cpp'; fi`

./Fighters/battle_rage-Fighters.o: ./Fighters/Fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Fighters.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Fighters.Tpo -c -o ./Fighters/battle_rage-Fighters.o `test -f './Fighters/Fighters.cpp' || echo '$(srcdir)/'`./Fighters/Fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Fighters.Tpo ./Fighters/$(DEPDIR)/battle_rage-Fighters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Fighters.cpp' object='./Fighters/battle_rage-Fighters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Fighters.o `test -f './Fighters/Fighters.cpp' || echo '$(srcdir)/'`./Fighters/Fighters.cpp

./Fighters/battle_rage-Fighters.obj: ./Fighters/Fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Fighters.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Fighters.Tpo -c -o ./Fighters/battle_rage-Fighters.obj `if test -f './Fighters/Fighters.cpp'; then $(CYGPATH_W) './Fighters/Fighters.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Fighters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Fighters.Tpo ./Fighters/$(DEPDIR)/battle_rage-Fighters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Fighters.cpp' object='./Fighters/battle_rage-Fighters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Fighters.obj `if test -f './Fighters/Fighters.cpp'; then $(CYGPATH_W) './Fighters/Fighters.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Fighters.cpp'; fi`

./Fighters/battle_rage-Fuuma.o: ./Fighters/Fuuma.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Fuuma.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Fuuma.Tpo -c -o ./Fighters/battle_rage-Fuuma.o `test -f './Fighters/Fuuma.cpp' || echo '$(srcdir)/'`./Fighters/Fuuma.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Fuuma.Tpo ./Fighters/$(DEPDIR)/battle_rage-Fuuma.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Fuuma.cpp' object='./Fighters/battle_rage-Fuuma.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Fuuma.o `test -f './Fighters/Fuuma.cpp' || echo '$(srcdir)/'`./Fighters/Fuuma.cpp

./Fighters/battle_rage-Fuuma.obj: ./Fighters/Fuuma.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Fuuma.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Fuuma.Tpo -c -o ./Fighters/battle_rage-Fuuma.obj `if test -f './Fighters/Fuuma.cpp'; then $(CYGPATH_W) './Fighters/Fuuma.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Fuuma.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Fuuma.Tpo ./Fighters/$(DEPDIR)/battle_rage-Fuuma.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Fuuma.cpp' object='./Fighters/battle_rage-Fuuma.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Fuuma.obj `if test -f './Fighters/Fuuma.cpp'; then $(CYGPATH_W) './Fighters/Fuuma.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Fuuma.cpp'; fi`

./Fighters/battle_rage-Geese_Howard.o: ./Fighters/Geese_Howard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Geese_Howard.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Tpo -c -o ./Fighters/battle_rage-Geese_Howard.o `test -f './Fighters/Geese_Howard.cpp' || echo '$(srcdir)/'`./Fighters/Geese_Howard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Tpo ./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Geese_Howard.cpp' object='./Fighters/battle_rage-Geese_Howard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Geese_Howard.o `test -f './Fighters/Geese_Howard.cpp' || echo '$(srcdir)/'`./Fighters/Geese_Howard.cpp

./Fighters/battle_rage-Geese_Howard.obj: ./Fighters/Geese_Howard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Geese_Howard.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Tpo -c -o ./Fighters/battle_rage-Geese_Howard.obj `if test -f './Fighters/Geese_Howard.cpp'; then $(CYGPATH_W) './Fighters/Geese_Howard.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Geese_Howard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Tpo ./Fighters/$(DEPDIR)/battle_rage-Geese_Howard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Geese_Howard.cpp' object='./Fighters/battle_rage-Geese_Howard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Geese_Howard.obj `if test -f './Fighters/Geese_Howard.cpp'; then $(CYGPATH_W) './Fighters/Geese_Howard.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Geese_Howard.cpp'; fi`

./Fighters/battle_rage-Hanzo.o: ./Fighters/Hanzo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Hanzo.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Hanzo.Tpo -c -o ./Fighters/battle_rage-Hanzo.o `test -f './Fighters/Hanzo.cpp' || echo '$(srcdir)/'`./Fighters/Hanzo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Hanzo.Tpo ./Fighters/$(DEPDIR)/battle_rage-Hanzo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Hanzo.cpp' object='./Fighters/battle_rage-Hanzo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Hanzo.o `test -f './Fighters/Hanzo.cpp' || echo '$(srcdir)/'`./Fighters/Hanzo.cpp

./Fighters/battle_rage-Hanzo.obj: ./Fighters/Hanzo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Hanzo.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Hanzo.Tpo -c -o ./Fighters/battle_rage-Hanzo.obj `if test -f './Fighters/Hanzo.cpp'; then $(CYGPATH_W) './Fighters/Hanzo.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Hanzo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Hanzo.Tpo ./Fighters/$(DEPDIR)/battle_rage-Hanzo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Hanzo.cpp' object='./Fighters/battle_rage-Hanzo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Hanzo.obj `if test -f './Fighters/Hanzo.cpp'; then $(CYGPATH_W) './Fighters/Hanzo.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Hanzo.cpp'; fi`

./Fighters/battle_rage-Hotaru_Futaba.o: ./Fighters/Hotaru_Futaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Hotaru_Futaba.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Tpo -c -o ./Fighters/battle_rage-Hotaru_Futaba.o `test -f './Fighters/Hotaru_Futaba.cpp' || echo '$(srcdir)/'`./Fighters/Hotaru_Futaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Tpo ./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Hotaru_Futaba.cpp' object='./Fighters/battle_rage-Hotaru_Futaba.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Hotaru_Futaba.o `test -f './Fighters/Hotaru_Futaba.cpp' || echo '$(srcdir)/'`./Fighters/Hotaru_Futaba.cpp

./Fighters/battle_rage-Hotaru_Futaba.obj: ./Fighters/Hotaru_Futaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Hotaru_Futaba.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Tpo -c -o ./Fighters/battle_rage-Hotaru_Futaba.obj `if test -f './Fighters/Hotaru_Futaba.cpp'; then $(CYGPATH_W) './Fighters/Hotaru_Futaba.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Hotaru_Futaba.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Tpo ./Fighters/$(DEPDIR)/battle_rage-Hotaru_Futaba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Hotaru_Futaba.cpp' object='./Fighters/battle_rage-Hotaru_Futaba.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Hotaru_Futaba.obj `if test -f './Fighters/Hotaru_Futaba.cpp'; then $(CYGPATH_W) './Fighters/Hotaru_Futaba.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Hotaru_Futaba.cpp'; fi`

./Fighters/battle_rage-Iori_Yagami.o: ./Fighters/Iori_Yagami.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Iori_Yagami.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Tpo -c -o ./Fighters/battle_rage-Iori_Yagami.o `test -f './Fighters/Iori_Yagami.cpp' || echo '$(srcdir)/'`./Fighters/Iori_Yagami.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Tpo ./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Iori_Yagami.cpp' object='./Fighters/battle_rage-Iori_Yagami.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Iori_Yagami.o `test -f './Fighters/Iori_Yagami.cpp' || echo '$(srcdir)/'`./Fighters/Iori_Yagami.cpp

./Fighters/battle_rage-Iori_Yagami.obj: ./Fighters/Iori_Yagami.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Iori_Yagami.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Tpo -c -o ./Fighters/battle_rage-Iori_Yagami.obj `if test -f './Fighters/Iori_Yagami.cpp'; then $(CYGPATH_W) './Fighters/Iori_Yagami.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Iori_Yagami.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Tpo ./Fighters/$(DEPDIR)/battle_rage-Iori_Yagami.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Iori_Yagami.cpp' object='./Fighters/battle_rage-Iori_Yagami.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Iori_Yagami.obj `if test -f './Fighters/Iori_Yagami.cpp'; then $(CYGPATH_W) './Fighters/Iori_Yagami.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Iori_Yagami.cpp'; fi`

./Fighters/battle_rage-K.o: ./Fighters/K.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-K.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-K.Tpo -c -o ./Fighters/battle_rage-K.o `test -f './Fighters/K.cpp' || echo '$(srcdir)/'`./Fighters/K.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-K.Tpo ./Fighters/$(DEPDIR)/battle_rage-K.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/K.cpp' object='./Fighters/battle_rage-K.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-K.o `test -f './Fighters/K.cpp' || echo '$(srcdir)/'`./Fighters/K.cpp

./Fighters/battle_rage-K.obj: ./Fighters/K.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-K.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-K.Tpo -c -o ./Fighters/battle_rage-K.obj `if test -f './Fighters/K.cpp'; then $(CYGPATH_W) './Fighters/K.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/K.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-K.Tpo ./Fighters/$(DEPDIR)/battle_rage-K.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/K.cpp' object='./Fighters/battle_rage-K.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-K.obj `if test -f './Fighters/K.cpp'; then $(CYGPATH_W) './Fighters/K.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/K.cpp'; fi`

./Fighters/battle_rage-Kim_Kaphwan.o: ./Fighters/Kim_Kaphwan.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Kim_Kaphwan.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Tpo -c -o ./Fighters/battle_rage-Kim_Kaphwan.o `test -f './Fighters/Kim_Kaphwan.cpp' || echo '$(srcdir)/'`./Fighters/Kim_Kaphwan.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Tpo ./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Kim_Kaphwan.cpp' object='./Fighters/battle_rage-Kim_Kaphwan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Kim_Kaphwan.o `test -f './Fighters/Kim_Kaphwan.cpp' || echo '$(srcdir)/'`./Fighters/Kim_Kaphwan.cpp

./Fighters/battle_rage-Kim_Kaphwan.obj: ./Fighters/Kim_Kaphwan.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Kim_Kaphwan.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Tpo -c -o ./Fighters/battle_rage-Kim_Kaphwan.obj `if test -f './Fighters/Kim_Kaphwan.cpp'; then $(CYGPATH_W) './Fighters/Kim_Kaphwan.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Kim_Kaphwan.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Tpo ./Fighters/$(DEPDIR)/battle_rage-Kim_Kaphwan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Kim_Kaphwan.cpp' object='./Fighters/battle_rage-Kim_Kaphwan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Kim_Kaphwan.obj `if test -f './Fighters/Kim_Kaphwan.cpp'; then $(CYGPATH_W) './Fighters/Kim_Kaphwan.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Kim_Kaphwan.cpp'; fi`

./Fighters/battle_rage-Kisarah_Westfield.o: ./Fighters/Kisarah_Westfield.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Kisarah_Westfield.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Tpo -c -o ./Fighters/battle_rage-Kisarah_Westfield.o `test -f './Fighters/Kisarah_Westfield.cpp' || echo '$(srcdir)/'`./Fighters/Kisarah_Westfield.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Tpo ./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Kisarah_Westfield.cpp' object='./Fighters/battle_rage-Kisarah_Westfield.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Kisarah_Westfield.o `test -f './Fighters/Kisarah_Westfield.cpp' || echo '$(srcdir)/'`./Fighters/Kisarah_Westfield.cpp

./Fighters/battle_rage-Kisarah_Westfield.obj: ./Fighters/Kisarah_Westfield.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Kisarah_Westfield.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Tpo -c -o ./Fighters/battle_rage-Kisarah_Westfield.obj `if test -f './Fighters/Kisarah_Westfield.cpp'; then $(CYGPATH_W) './Fighters/Kisarah_Westfield.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Kisarah_Westfield.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Tpo ./Fighters/$(DEPDIR)/battle_rage-Kisarah_Westfield.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Kisarah_Westfield.cpp' object='./Fighters/battle_rage-Kisarah_Westfield.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Kisarah_Westfield.obj `if test -f './Fighters/Kisarah_Westfield.cpp'; then $(CYGPATH_W) './Fighters/Kisarah_Westfield.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Kisarah_Westfield.cpp'; fi`

./Fighters/battle_rage-Kyo_Kusanagi.o: ./Fighters/Kyo_Kusanagi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Kyo_Kusanagi.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Tpo -c -o ./Fighters/battle_rage-Kyo_Kusanagi.o `test -f './Fighters/Kyo_Kusanagi.cpp' || echo '$(srcdir)/'`./Fighters/Kyo_Kusanagi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Tpo ./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Kyo_Kusanagi.cpp' object='./Fighters/battle_rage-Kyo_Kusanagi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Kyo_Kusanagi.o `test -f './Fighters/Kyo_Kusanagi.cpp' || echo '$(srcdir)/'`./Fighters/Kyo_Kusanagi.cpp

./Fighters/battle_rage-Kyo_Kusanagi.obj: ./Fighters/Kyo_Kusanagi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Kyo_Kusanagi.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Tpo -c -o ./Fighters/battle_rage-Kyo_Kusanagi.obj `if test -f './Fighters/Kyo_Kusanagi.cpp'; then $(CYGPATH_W) './Fighters/Kyo_Kusanagi.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Kyo_Kusanagi.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Tpo ./Fighters/$(DEPDIR)/battle_rage-Kyo_Kusanagi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Kyo_Kusanagi.cpp' object='./Fighters/battle_rage-Kyo_Kusanagi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Kyo_Kusanagi.obj `if test -f './Fighters/Kyo_Kusanagi.cpp'; then $(CYGPATH_W) './Fighters/Kyo_Kusanagi.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Kyo_Kusanagi.cpp'; fi`

./Fighters/battle_rage-Lee_Pai_Long.o: ./Fighters/Lee_Pai_Long.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Lee_Pai_Long.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Tpo -c -o ./Fighters/battle_rage-Lee_Pai_Long.o `test -f './Fighters/Lee_Pai_Long.cpp' || echo '$(srcdir)/'`./Fighters/Lee_Pai_Long.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Tpo ./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Lee_Pai_Long.cpp' object='./Fighters/battle_rage-Lee_Pai_Long.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Lee_Pai_Long.o `test -f './Fighters/Lee_Pai_Long.cpp' || echo '$(srcdir)/'`./Fighters/Lee_Pai_Long.cpp

./Fighters/battle_rage-Lee_Pai_Long.obj: ./Fighters/Lee_Pai_Long.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Lee_Pai_Long.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Tpo -c -o ./Fighters/battle_rage-Lee_Pai_Long.obj `if test -f './Fighters/Lee_Pai_Long.cpp'; then $(CYGPATH_W) './Fighters/Lee_Pai_Long.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Lee_Pai_Long.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Tpo ./Fighters/$(DEPDIR)/battle_rage-Lee_Pai_Long.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Lee_Pai_Long.cpp' object='./Fighters/battle_rage-Lee_Pai_Long.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Lee_Pai_Long.obj `if test -f './Fighters/Lee_Pai_Long.cpp'; then $(CYGPATH_W) './Fighters/Lee_Pai_Long.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Lee_Pai_Long.cpp'; fi`

./Fighters/battle_rage-Mai_Shiranui.o: ./Fighters/Mai_Shiranui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Mai_Shiranui.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Tpo -c -o ./Fighters/battle_rage-Mai_Shiranui.o `test -f './Fighters/Mai_Shiranui.cpp' || echo '$(srcdir)/'`./Fighters/Mai_Shiranui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Tpo ./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Mai_Shiranui.cpp' object='./Fighters/battle_rage-Mai_Shiranui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Mai_Shiranui.o `test -f './Fighters/Mai_Shiranui.cpp' || echo '$(srcdir)/'`./Fighters/Mai_Shiranui.cpp

./Fighters/battle_rage-Mai_Shiranui.obj: ./Fighters/Mai_Shiranui.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Mai_Shiranui.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Tpo -c -o ./Fighters/battle_rage-Mai_Shiranui.obj `if test -f './Fighters/Mai_Shiranui.cpp'; then $(CYGPATH_W) './Fighters/Mai_Shiranui.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Mai_Shiranui.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Tpo ./Fighters/$(DEPDIR)/battle_rage-Mai_Shiranui.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Mai_Shiranui.cpp' object='./Fighters/battle_rage-Mai_Shiranui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Mai_Shiranui.obj `if test -f './Fighters/Mai_Shiranui.cpp'; then $(CYGPATH_W) './Fighters/Mai_Shiranui.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Mai_Shiranui.cpp'; fi`

./Fighters/battle_rage-Mr_Big.o: ./Fighters/Mr_Big.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Mr_Big.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Tpo -c -o ./Fighters/battle_rage-Mr_Big.o `test -f './Fighters/Mr_Big.cpp' || echo '$(srcdir)/'`./Fighters/Mr_Big.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Tpo ./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Mr_Big.cpp' object='./Fighters/battle_rage-Mr_Big.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Mr_Big.o `test -f './Fighters/Mr_Big.cpp' || echo '$(srcdir)/'`./Fighters/Mr_Big.cpp

./Fighters/battle_rage-Mr_Big.obj: ./Fighters/Mr_Big.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Mr_Big.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Tpo -c -o ./Fighters/battle_rage-Mr_Big.obj `if test -f './Fighters/Mr_Big.cpp'; then $(CYGPATH_W) './Fighters/Mr_Big.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Mr_Big.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Tpo ./Fighters/$(DEPDIR)/battle_rage-Mr_Big.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Mr_Big.cpp' object='./Fighters/battle_rage-Mr_Big.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Mr_Big.obj `if test -f './Fighters/Mr_Big.cpp'; then $(CYGPATH_W) './Fighters/Mr_Big.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Mr_Big.cpp'; fi`

./Fighters/battle_rage-Mr_Karate.o: ./Fighters/Mr_Karate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Mr_Karate.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Tpo -c -o ./Fighters/battle_rage-Mr_Karate.o `test -f './Fighters/Mr_Karate.cpp' || echo '$(srcdir)/'`./Fighters/Mr_Karate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Tpo ./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Mr_Karate.cpp' object='./Fighters/battle_rage-Mr_Karate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Mr_Karate.o `test -f './Fighters/Mr_Karate.cpp' || echo '$(srcdir)/'`./Fighters/Mr_Karate.cpp

./Fighters/battle_rage-Mr_Karate.obj: ./Fighters/Mr_Karate.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Mr_Karate.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Tpo -c -o ./Fighters/battle_rage-Mr_Karate.obj `if test -f './Fighters/Mr_Karate.cpp'; then $(CYGPATH_W) './Fighters/Mr_Karate.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Mr_Karate.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Tpo ./Fighters/$(DEPDIR)/battle_rage-Mr_Karate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Mr_Karate.cpp' object='./Fighters/battle_rage-Mr_Karate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Mr_Karate.obj `if test -f './Fighters/Mr_Karate.cpp'; then $(CYGPATH_W) './Fighters/Mr_Karate.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Mr_Karate.cpp'; fi`

./Fighters/battle_rage-Robert_Garcia.o: ./Fighters/Robert_Garcia.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Robert_Garcia.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Tpo -c -o ./Fighters/battle_rage-Robert_Garcia.o `test -f './Fighters/Robert_Garcia.cpp' || echo '$(srcdir)/'`./Fighters/Robert_Garcia.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Tpo ./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Robert_Garcia.cpp' object='./Fighters/battle_rage-Robert_Garcia.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Robert_Garcia.o `test -f './Fighters/Robert_Garcia.cpp' || echo '$(srcdir)/'`./Fighters/Robert_Garcia.cpp

./Fighters/battle_rage-Robert_Garcia.obj: ./Fighters/Robert_Garcia.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Robert_Garcia.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Tpo -c -o ./Fighters/battle_rage-Robert_Garcia.obj `if test -f './Fighters/Robert_Garcia.cpp'; then $(CYGPATH_W) './Fighters/Robert_Garcia.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Robert_Garcia.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Tpo ./Fighters/$(DEPDIR)/battle_rage-Robert_Garcia.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Robert_Garcia.cpp' object='./Fighters/battle_rage-Robert_Garcia.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Robert_Garcia.obj `if test -f './Fighters/Robert_Garcia.cpp'; then $(CYGPATH_W) './Fighters/Robert_Garcia.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Robert_Garcia.cpp'; fi`

./Fighters/battle_rage-Rock_Howard.o: ./Fighters/Rock_Howard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Rock_Howard.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Tpo -c -o ./Fighters/battle_rage-Rock_Howard.o `test -f './Fighters/Rock_Howard.cpp' || echo '$(srcdir)/'`./Fighters/Rock_Howard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Tpo ./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Rock_Howard.cpp' object='./Fighters/battle_rage-Rock_Howard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Rock_Howard.o `test -f './Fighters/Rock_Howard.cpp' || echo '$(srcdir)/'`./Fighters/Rock_Howard.cpp

./Fighters/battle_rage-Rock_Howard.obj: ./Fighters/Rock_Howard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Rock_Howard.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Tpo -c -o ./Fighters/battle_rage-Rock_Howard.obj `if test -f './Fighters/Rock_Howard.cpp'; then $(CYGPATH_W) './Fighters/Rock_Howard.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Rock_Howard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Tpo ./Fighters/$(DEPDIR)/battle_rage-Rock_Howard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Rock_Howard.cpp' object='./Fighters/battle_rage-Rock_Howard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Rock_Howard.obj `if test -f './Fighters/Rock_Howard.cpp'; then $(CYGPATH_W) './Fighters/Rock_Howard.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Rock_Howard.cpp'; fi`

./Fighters/battle_rage-Terry_Bogard.o: ./Fighters/Terry_Bogard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Terry_Bogard.o -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Tpo -c -o ./Fighters/battle_rage-Terry_Bogard.o `test -f './Fighters/Terry_Bogard.cpp' || echo '$(srcdir)/'`./Fighters/Terry_Bogard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Tpo ./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Terry_Bogard.cpp' object='./Fighters/battle_rage-Terry_Bogard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Terry_Bogard.o `test -f './Fighters/Terry_Bogard.cpp' || echo '$(srcdir)/'`./Fighters/Terry_Bogard.cpp

./Fighters/battle_rage-Terry_Bogard.obj: ./Fighters/Terry_Bogard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./Fighters/battle_rage-Terry_Bogard.obj -MD -MP -MF ./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Tpo -c -o ./Fighters/battle_rage-Terry_Bogard.obj `if test -f './Fighters/Terry_Bogard.cpp'; then $(CYGPATH_W) './Fighters/Terry_Bogard.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Terry_Bogard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) ./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Tpo ./Fighters/$(DEPDIR)/battle_rage-Terry_Bogard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Fighters/Terry_Bogard.cpp' object='./Fighters/battle_rage-Terry_Bogard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./Fighters/battle_rage-Terry_Bogard.obj `if test -f './Fighters/Terry_Bogard.cpp'; then $(CYGPATH_W) './Fighters/Terry_Bogard.cpp'; else $(CYGPATH_W) '$(srcdir)/./Fighters/Terry_Bogard.cpp'; fi`

./battle_rage-Input_Handler.o: ./Input_Handler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-Input_Handler.o -MD -MP -MF $(DEPDIR)/battle_rage-Input_Handler.Tpo -c -o ./battle_rage-Input_Handler.o `test -f './Input_Handler.cpp' || echo '$(srcdir)/'`./Input_Handler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-Input_Handler.Tpo $(DEPDIR)/battle_rage-Input_Handler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Input_Handler.cpp' object='./battle_rage-Input_Handler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-Input_Handler.o `test -f './Input_Handler.cpp' || echo '$(srcdir)/'`./Input_Handler.cpp

./battle_rage-Input_Handler.obj: ./Input_Handler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-Input_Handler.obj -MD -MP -MF $(DEPDIR)/battle_rage-Input_Handler.Tpo -c -o ./battle_rage-Input_Handler.obj `if test -f './Input_Handler.cpp'; then $(CYGPATH_W) './Input_Handler.cpp'; else $(CYGPATH_W) '$(srcdir)/./Input_Handler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-Input_Handler.Tpo $(DEPDIR)/battle_rage-Input_Handler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./Input_Handler.cpp' object='./battle_rage-Input_Handler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-Input_Handler.obj `if test -f './Input_Handler.cpp'; then $(CYGPATH_W) './Input_Handler.cpp'; else $(CYGPATH_W) '$(srcdir)/./Input_Handler.cpp'; fi`

./battle_rage-joystick.o: ./joystick.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-joystick.o -MD -MP -MF $(DEPDIR)/battle_rage-joystick.Tpo -c -o ./battle_rage-joystick.o `test -f './joystick.cpp' || echo '$(srcdir)/'`./joystick.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-joystick.Tpo $(DEPDIR)/battle_rage-joystick.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./joystick.cpp' object='./battle_rage-joystick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-joystick.o `test -f './joystick.cpp' || echo '$(srcdir)/'`./joystick.cpp

./battle_rage-joystick.obj: ./joystick.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-joystick.obj -MD -MP -MF $(DEPDIR)/battle_rage-joystick.Tpo -c -o ./battle_rage-joystick.obj `if test -f './joystick.cpp'; then $(CYGPATH_W) './joystick.cpp'; else $(CYGPATH_W) '$(srcdir)/./joystick.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-joystick.Tpo $(DEPDIR)/battle_rage-joystick.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./joystick.cpp' object='./battle_rage-joystick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-joystick.obj `if test -f './joystick.cpp'; then $(CYGPATH_W) './joystick.cpp'; else $(CYGPATH_W) '$(srcdir)/./joystick.cpp'; fi`

./battle_rage-helper_functions.o: ./helper_functions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-helper_functions.o -MD -MP -MF $(DEPDIR)/battle_rage-helper_functions.Tpo -c -o ./battle_rage-helper_functions.o `test -f './helper_functions.cpp' || echo '$(srcdir)/'`./helper_functions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-helper_functions.Tpo $(DEPDIR)/battle_rage-helper_functions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./helper_functions.cpp' object='./battle_rage-helper_functions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-helper_functions.o `test -f './helper_functions.cpp' || echo '$(srcdir)/'`./helper_functions.cpp

./battle_rage-helper_functions.obj: ./helper_functions.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-helper_functions.obj -MD -MP -MF $(DEPDIR)/battle_rage-helper_functions.Tpo -c -o ./battle_rage-helper_functions.obj `if test -f './helper_functions.cpp'; then $(CYGPATH_W) './helper_functions.cpp'; else $(CYGPATH_W) '$(srcdir)/./helper_functions.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-helper_functions.Tpo $(DEPDIR)/battle_rage-helper_functions.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./helper_functions.cpp' object='./battle_rage-helper_functions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-helper_functions.obj `if test -f './helper_functions.cpp'; then $(CYGPATH_W) './helper_functions.cpp'; else $(CYGPATH_W) '$(srcdir)/./helper_functions.cpp'; fi`

./battle_rage-main.o: ./main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-main.o -MD -MP -MF $(DEPDIR)/battle_rage-main.Tpo -c -o ./battle_rage-main.o `test -f './main.cpp' || echo '$(srcdir)/'`./main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-main.Tpo $(DEPDIR)/battle_rage-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./main.cpp' object='./battle_rage-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-main.o `test -f './main.cpp' || echo '$(srcdir)/'`./main.cpp

./battle_rage-main.obj: ./main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-main.obj -MD -MP -MF $(DEPDIR)/battle_rage-main.Tpo -c -o ./battle_rage-main.obj `if test -f './main.cpp'; then $(CYGPATH_W) './main.cpp'; else $(CYGPATH_W) '$(srcdir)/./main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-main.Tpo $(DEPDIR)/battle_rage-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./main.cpp' object='./battle_rage-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-main.obj `if test -f './main.cpp'; then $(CYGPATH_W) './main.cpp'; else $(CYGPATH_W) '$(srcdir)/./main.cpp'; fi`

./battle_rage-joystick_configuration.o: ./joystick_configuration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-joystick_configuration.o -MD -MP -MF $(DEPDIR)/battle_rage-joystick_configuration.Tpo -c -o ./battle_rage-joystick_configuration.o `test -f './joystick_configuration.cpp' || echo '$(srcdir)/'`./joystick_configuration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-joystick_configuration.Tpo $(DEPDIR)/battle_rage-joystick_configuration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./joystick_configuration.cpp' object='./battle_rage-joystick_configuration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-joystick_configuration.o `test -f './joystick_configuration.cpp' || echo '$(srcdir)/'`./joystick_configuration.cpp

./battle_rage-joystick_configuration.obj: ./joystick_configuration.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-joystick_configuration.obj -MD -MP -MF $(DEPDIR)/battle_rage-joystick_configuration.Tpo -c -o ./battle_rage-joystick_configuration.obj `if test -f './joystick_configuration.cpp'; then $(CYGPATH_W) './joystick_configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/./joystick_configuration.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-joystick_configuration.Tpo $(DEPDIR)/battle_rage-joystick_configuration.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./joystick_configuration.cpp' object='./battle_rage-joystick_configuration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-joystick_configuration.obj `if test -f './joystick_configuration.cpp'; then $(CYGPATH_W) './joystick_configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/./joystick_configuration.cpp'; fi`

./battle_rage-choose_fighters.o: ./choose_fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-choose_fighters.o -MD -MP -MF $(DEPDIR)/battle_rage-choose_fighters.Tpo -c -o ./battle_rage-choose_fighters.o `test -f './choose_fighters.cpp' || echo '$(srcdir)/'`./choose_fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-choose_fighters.Tpo $(DEPDIR)/battle_rage-choose_fighters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./choose_fighters.cpp' object='./battle_rage-choose_fighters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-choose_fighters.o `test -f './choose_fighters.cpp' || echo '$(srcdir)/'`./choose_fighters.cpp

./battle_rage-choose_fighters.obj: ./choose_fighters.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-choose_fighters.obj -MD -MP -MF $(DEPDIR)/battle_rage-choose_fighters.Tpo -c -o ./battle_rage-choose_fighters.obj `if test -f './choose_fighters.cpp'; then $(CYGPATH_W) './choose_fighters.cpp'; else $(CYGPATH_W) '$(srcdir)/./choose_fighters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-choose_fighters.Tpo $(DEPDIR)/battle_rage-choose_fighters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./choose_fighters.cpp' object='./battle_rage-choose_fighters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-choose_fighters.obj `if test -f './choose_fighters.cpp'; then $(CYGPATH_W) './choose_fighters.cpp'; else $(CYGPATH_W) '$(srcdir)/./choose_fighters.cpp'; fi`

./battle_rage-fighting_mainloop.o: ./fighting_mainloop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-fighting_mainloop.o -MD -MP -MF $(DEPDIR)/battle_rage-fighting_mainloop.Tpo -c -o ./battle_rage-fighting_mainloop.o `test -f './fighting_mainloop.cpp' || echo '$(srcdir)/'`./fighting_mainloop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-fighting_mainloop.Tpo $(DEPDIR)/battle_rage-fighting_mainloop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./fighting_mainloop.cpp' object='./battle_rage-fighting_mainloop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-fighting_mainloop.o `test -f './fighting_mainloop.cpp' || echo '$(srcdir)/'`./fighting_mainloop.cpp

./battle_rage-fighting_mainloop.obj: ./fighting_mainloop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-fighting_mainloop.obj -MD -MP -MF $(DEPDIR)/battle_rage-fighting_mainloop.Tpo -c -o ./battle_rage-fighting_mainloop.obj `if test -f './fighting_mainloop.cpp'; then $(CYGPATH_W) './fighting_mainloop.cpp'; else $(CYGPATH_W) '$(srcdir)/./fighting_mainloop.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-fighting_mainloop.Tpo $(DEPDIR)/battle_rage-fighting_mainloop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./fighting_mainloop.cpp' object='./battle_rage-fighting_mainloop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-fighting_mainloop.obj `if test -f './fighting_mainloop.cpp'; then $(CYGPATH_W) './fighting_mainloop.cpp'; else $(CYGPATH_W) '$(srcdir)/./fighting_mainloop.cpp'; fi`

./battle_rage-presentation_screen.o: ./presentation_screen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-presentation_screen.o -MD -MP -MF $(DEPDIR)/battle_rage-presentation_screen.Tpo -c -o ./battle_rage-presentation_screen.o `test -f './presentation_screen.cpp' || echo '$(srcdir)/'`./presentation_screen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-presentation_screen.Tpo $(DEPDIR)/battle_rage-presentation_screen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./presentation_screen.cpp' object='./battle_rage-presentation_screen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-presentation_screen.o `test -f './presentation_screen.cpp' || echo '$(srcdir)/'`./presentation_screen.cpp

./battle_rage-presentation_screen.obj: ./presentation_screen.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-presentation_screen.obj -MD -MP -MF $(DEPDIR)/battle_rage-presentation_screen.Tpo -c -o ./battle_rage-presentation_screen.obj `if test -f './presentation_screen.cpp'; then $(CYGPATH_W) './presentation_screen.cpp'; else $(CYGPATH_W) '$(srcdir)/./presentation_screen.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-presentation_screen.Tpo $(DEPDIR)/battle_rage-presentation_screen.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./presentation_screen.cpp' object='./battle_rage-presentation_screen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-presentation_screen.obj `if test -f './presentation_screen.cpp'; then $(CYGPATH_W) './presentation_screen.cpp'; else $(CYGPATH_W) '$(srcdir)/./presentation_screen.cpp'; fi`

./battle_rage-main_menu.o: ./main_menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-main_menu.o -MD -MP -MF $(DEPDIR)/battle_rage-main_menu.Tpo -c -o ./battle_rage-main_menu.o `test -f './main_menu.cpp' || echo '$(srcdir)/'`./main_menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-main_menu.Tpo $(DEPDIR)/battle_rage-main_menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./main_menu.cpp' object='./battle_rage-main_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-main_menu.o `test -f './main_menu.cpp' || echo '$(srcdir)/'`./main_menu.cpp

./battle_rage-main_menu.obj: ./main_menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-main_menu.obj -MD -MP -MF $(DEPDIR)/battle_rage-main_menu.Tpo -c -o ./battle_rage-main_menu.obj `if test -f './main_menu.cpp'; then $(CYGPATH_W) './main_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/./main_menu.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-main_menu.Tpo $(DEPDIR)/battle_rage-main_menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./main_menu.cpp' object='./battle_rage-main_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-main_menu.obj `if test -f './main_menu.cpp'; then $(CYGPATH_W) './main_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/./main_menu.cpp'; fi`

./battle_rage-configure_game_menu.o: ./configure_game_menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-configure_game_menu.o -MD -MP -MF $(DEPDIR)/battle_rage-configure_game_menu.Tpo -c -o ./battle_rage-configure_game_menu.o `test -f './configure_game_menu.cpp' || echo '$(srcdir)/'`./configure_game_menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-configure_game_menu.Tpo $(DEPDIR)/battle_rage-configure_game_menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./configure_game_menu.cpp' object='./battle_rage-configure_game_menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-configure_game_menu.o `test -f './configure_game_menu.cpp' || echo '$(srcdir)/'`./configure_game_menu.cpp

./battle_rage-configure_game_menu.obj: ./configure_game_menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-configure_game_menu.obj -MD -MP -MF $(DEPDIR)/battle_rage-configure_game_menu.Tpo -c -o ./battle_rage-configure_game_menu.obj `if test -f './configure_game_menu.cpp'; then $(CYGPATH_W) './configure_game_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/./configure_game_menu.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-configure_game_menu.Tpo $(DEPDIR)/battle_rage-configure_game_menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./configure_game_menu.cpp' object='./battle_rage-configure_game_menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-configure_game_menu.obj `if test -f './configure_game_menu.cpp'; then $(CYGPATH_W) './configure_game_menu.cpp'; else $(CYGPATH_W) '$(srcdir)/./configure_game_menu.cpp'; fi`

./battle_rage-round_interlude.o: ./round_interlude.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-round_interlude.o -MD -MP -MF $(DEPDIR)/battle_rage-round_interlude.Tpo -c -o ./battle_rage-round_interlude.o `test -f './round_interlude.cpp' || echo '$(srcdir)/'`./round_interlude.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-round_interlude.Tpo $(DEPDIR)/battle_rage-round_interlude.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./round_interlude.cpp' object='./battle_rage-round_interlude.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-round_interlude.o `test -f './round_interlude.cpp' || echo '$(srcdir)/'`./round_interlude.cpp

./battle_rage-round_interlude.obj: ./round_interlude.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -MT ./battle_rage-round_interlude.obj -MD -MP -MF $(DEPDIR)/battle_rage-round_interlude.Tpo -c -o ./battle_rage-round_interlude.obj `if test -f './round_interlude.cpp'; then $(CYGPATH_W) './round_interlude.cpp'; else $(CYGPATH_W) '$(srcdir)/./round_interlude.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/battle_rage-round_interlude.Tpo $(DEPDIR)/battle_rage-round_interlude.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='./round_interlude.cpp' object='./battle_rage-round_interlude.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(battle_rage_CPPFLAGS) $(CPPFLAGS) $(battle_rage_CXXFLAGS) $(CXXFLAGS) -c -o ./battle_rage-round_interlude.obj `if test -f './round_interlude.cpp'; then $(CYGPATH_W) './round_interlude.cpp'; else $(CYGPATH_W) '$(srcdir)/./round_interlude.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ./$(am__dirstamp)
	-rm -f Fighters/$(DEPDIR)/$(am__dirstamp)
	-rm -f Fighters/$(am__dirstamp)
	-rm -f Files/$(DEPDIR)/$(am__dirstamp)
	-rm -f Files/$(am__dirstamp)
	-test -z "$(DEPDIR)/$(am__dirstamp)" || rm -f $(DEPDIR)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) ./Fighters/$(DEPDIR) ./Files/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) ./Fighters/$(DEPDIR) ./Files/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
